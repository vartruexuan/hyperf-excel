<?php

declare(strict_types=1);

namespace Vartruexuan\HyperfExcel\Listener;

use Psr\Container\ContainerInterface;
use Vartruexuan\HyperfExcel\Db\ExcelLogManager;
use Vartruexuan\HyperfExcel\Event\AfterExport;
use Vartruexuan\HyperfExcel\Event\AfterExportSheet;
use Vartruexuan\HyperfExcel\Event\AfterImport;
use Vartruexuan\HyperfExcel\Event\AfterImportSheet;
use Vartruexuan\HyperfExcel\Event\BeforeExport;
use Vartruexuan\HyperfExcel\Event\BeforeImport;
use Vartruexuan\HyperfExcel\Event\Event;
use function Hyperf\Support\make;

/**
 * 监听输出日志
 */
class ExcelLogDbListener extends BaseListener
{
    public function process(object $event): void
    {
        /**
         * @var Event $event
         */
        $enable = $event->driver->getConfig()['dbLog']['enable'] ?? true;
        if (!$enable || !$event->config->getIsDbLog()) {
            return;
        }
        parent::process($event); // TODO: Change the autogenerated stub
    }

    function beforeExport(object $event)
    {
        /**
         * @var BeforeExport $event
         */
        $event->driver->dbLog->saveLog($event->config);
    }

    function beforeExportExcel(object $event)
    {
        // TODO: Implement beforeExportExcel() method.
    }

    function beforeExportData(object $event)
    {
        // TODO: Implement beforeExportData() method.
    }

    function beforeExportSheet(object $event)
    {
        // TODO: Implement beforeExportSheet() method.
    }

    function afterExport(object $event)
    {
        /**
         * @var AfterExport $event
         */
        $event->driver->dbLog->saveLog($event->config);
    }

    function afterExportData(object $event)
    {
        // TODO: Implement afterExportData() method.
    }

    function afterExportExcel(object $event)
    {
        // TODO: Implement afterExportExcel() method.
    }

    function afterExportSheet(object $event)
    {
        /**
         * @var AfterExportSheet $event
         */
        $event->driver->dbLog->saveLog($event->config);
    }

    function beforeImport(object $event)
    {
        /**
         * @var BeforeImport $event
         */
        $event->driver->dbLog->saveLog($event->config);
    }

    function beforeImportExcel(object $event)
    {
        // TODO: Implement beforeImportExcel() method.
    }

    function beforeImportData(object $event)
    {
        // TODO: Implement beforeImportData() method.
    }

    function beforeImportSheet(object $event)
    {
        // TODO: Implement beforeImportSheet() method.
    }

    function afterImport(object $event)
    {
        /**
         * @var AfterImport $event
         */
        $event->driver->dbLog->saveLog($event->config);
    }

    function afterImportData(object $event)
    {
        // TODO: Implement afterImportData() method.
    }

    function afterImportExcel(object $event)
    {
        // TODO: Implement afterImportExcel() method.
    }

    function afterImportSheet(object $event)
    {
        /**
         * @var AfterImportSheet $event
         */
        $event->driver->dbLog->saveLog($event->config);
    }

    function error(object $event)
    {
        /**
         * @var Error $event
         */
        $event->driver->dbLog->saveLog($event->config, [
            'remark' => $event->exception->getMessage(),
        ]);
    }

}